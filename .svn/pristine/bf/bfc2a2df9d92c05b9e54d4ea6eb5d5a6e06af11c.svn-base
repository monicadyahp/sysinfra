<?php

namespace App\Controllers\oee_molding;

use App\Controllers\BaseController;

use App\Models\oee_molding\M_OEEDataMold;
use App\Models\oee_brazing\M_OEEDataBraz;
use App\Models\master_brazing\M_MstMachine;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Ods;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
use PhpOffice\PhpSpreadsheet\Style\Fill;
use PhpOffice\PhpSpreadsheet\Style\Border;

class OEEDataMold extends BaseController
{
    protected $M_OEEDataMold;
    protected $M_OEEDataBraz;
    protected $M_MstMachine;

    public function __construct()
    {
        $this->M_OEEDataMold = new M_OEEDataMold();
        $this->M_OEEDataBraz = new M_OEEDataBraz();
        $this->M_MstMachine = new M_MstMachine();
    }

    public function index()
    {
        if (!session()->get("login")) {
            return redirect()->to("/");
        }

        // Retrieve the user menu from the session
        $usermenu = session()->get("usermenu");

        // Find the active menu group and menu name
        foreach ($usermenu as $menu) {
            if ($menu->umn_path === "OEEDataMold") {
                $activeMenuGroup    = $menu->umg_groupname;
                $activeMenuName     = $menu->umn_menuname;
                break; // Stop the loop once the active menu is found
            }
        }

        $data["active_menu_group"]  = $activeMenuGroup;
        $data["active_menu_name"]   = $activeMenuName;

        $data["trouble_data"]       = $this->M_OEEDataBraz->get_trouble();
        $data["activity_data"]      = $this->M_OEEDataBraz->get_activity();
        $data["machine_data"]       = $this->M_MstMachine->get_machine_data();

        return view("oee_molding/data/main", $data);
    }

    public function get_data()
    {
        $series     = $this->request->getPost("series");
        $end_date   = $this->request->getPost("end_date");
        $data = $this->M_OEEDataMold->get_data($series, $end_date);
        return $this->response->setJSON($data);
    }

    public function get_machine_header()
    {
        $machine    = $this->request->getPost("machine");
        $start_date = $this->request->getPost("start_date");
        $end_date   = $this->request->getPost("end_date");
        // var_dump($machine, $start_date, $end_date);die();

        $data = $this->M_OEEDataMold->get_machine_header($machine, $start_date, $end_date);
        return $this->response->setJSON($data);
    }

    public function get_machine_detail()
    {
        $header_id = $this->request->getPost("header_id");

        // Get machine details
        $details = $this->M_OEEDataMold->get_machine_detail($header_id);
        // Get total time calculations
        $totals = $this->M_OEEDataMold->get_total_times($header_id);
        // var_dump($details, $totals);die();

        return $this->response->setJSON([
            'details'           => $details,
            'total_time_actual' => $totals->total_time_actual ?? 0, // Fallback to 0 if null
            'total_time_calc'   => $totals->total_time_calc ?? 0    // Fallback to 0 if null
        ]);
    }
    
}
