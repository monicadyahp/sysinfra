23-06 database

jincommon

//////////////////////

-- Table: public.m_application

-- DROP TABLE IF EXISTS public.m_application;

CREATE TABLE IF NOT EXISTS public.m_application
(
    appcode integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 19 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    appname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    appisactive smallint,
    appdescription character varying(100) COLLATE pg_catalog."default",
    appusername character varying(50) COLLATE pg_catalog."default",
    applastupdate timestamp without time zone,
    CONSTRAINT m_application_pkey PRIMARY KEY (appname)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.m_application
    OWNER to postgres;

GRANT ALL ON TABLE public.m_application TO postgres;

//////////////////////

-- Table: public.m_menugroup

-- DROP TABLE IF EXISTS public.m_menugroup;

CREATE TABLE IF NOT EXISTS public.m_menugroup
(
    groupcode integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 87 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    groupappcode integer NOT NULL,
    groupname character varying(30) COLLATE pg_catalog."default" NOT NULL,
    groupclass character varying(20) COLLATE pg_catalog."default",
    grouplastuser character varying(30) COLLATE pg_catalog."default",
    grouplastupdate timestamp without time zone,
    groupicon character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT pk_m_menugroup_1 PRIMARY KEY (groupcode)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.m_menugroup
    OWNER to postgres;

GRANT ALL ON TABLE public.m_menugroup TO postgres;

//////////////////////

-- Table: public.m_menuname

-- DROP TABLE IF EXISTS public.m_menuname;

CREATE TABLE IF NOT EXISTS public.m_menuname
(
    mn_menucode integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 179 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    mn_groupcode integer NOT NULL,
    mn_menuname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    mn_path character varying(100) COLLATE pg_catalog."default",
    mn_lastupdate timestamp without time zone,
    mn_lastuser character varying(50) COLLATE pg_catalog."default",
    mn_isactive smallint,
    mn_shortpath character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT m_menuname_pkey PRIMARY KEY (mn_menucode)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.m_menuname
    OWNER to postgres;

GRANT ALL ON TABLE public.m_menuname TO postgres;

//////////////////////

-- Table: public.tbmst_employee

-- DROP TABLE IF EXISTS public.tbmst_employee;

CREATE TABLE IF NOT EXISTS public.tbmst_employee
(
    em_emplcode integer NOT NULL,
    em_emplname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    em_sexcode smallint,
    em_email character varying(50) COLLATE pg_catalog."default",
    em_positioncode smallint,
    em_hiredate date,
    em_resigndate date,
    em_finishcontract date,
    em_sectioncode integer,
    em_extend integer,
    em_emplstatus integer NOT NULL,
    em_emailjininternal character varying(50) COLLATE pg_catalog."default",
    em_emailjinexternal character varying(50) COLLATE pg_catalog."default",
    em_orghiredate timestamp without time zone,
    CONSTRAINT pk_tbmst_employee_1 PRIMARY KEY (em_emplcode)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_employee
    OWNER to postgres;

GRANT ALL ON TABLE public.tbmst_employee TO postgres;

//////////////////////

-- Table: public.tbmst_position

-- DROP TABLE IF EXISTS public.tbmst_position;

CREATE TABLE IF NOT EXISTS public.tbmst_position
(
    pm_code integer NOT NULL,
    pm_positionname character varying(50) COLLATE pg_catalog."default" NOT NULL,
    pm_gradereff smallint,
    pm_positiondesc character varying(25) COLLATE pg_catalog."default",
    pm_class1 character varying(30) COLLATE pg_catalog."default",
    pm_class2 character varying(30) COLLATE pg_catalog."default",
    pm_status integer,
    pm_maxotactual numeric(18,2),
    pm_codeinitial smallint,
    pm_username character varying(25) COLLATE pg_catalog."default",
    pm_lastupdate date,
    pm_otallow smallint,
    pm_otmax smallint,
    pm_nextposition integer,
    pm_seqno integer,
    CONSTRAINT pk_tbmst_position_1 PRIMARY KEY (pm_code)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_position
    OWNER to postgres;

GRANT ALL ON TABLE public.tbmst_position TO postgres;

//////////////////////

-- Table: public.tbmst_section

-- DROP TABLE IF EXISTS public.tbmst_section;

CREATE TABLE IF NOT EXISTS public.tbmst_section
(
    sec_sectioncode integer NOT NULL,
    sec_division character varying(50) COLLATE pg_catalog."default",
    sec_department character varying(50) COLLATE pg_catalog."default",
    sec_section character varying(50) COLLATE pg_catalog."default",
    sec_team character varying(70) COLLATE pg_catalog."default",
    sec_lastupdate timestamp without time zone,
    sec_username character varying(50) COLLATE pg_catalog."default",
    sec_departmentnaming character varying(50) COLLATE pg_catalog."default",
    sec_sectionnaming character varying(50) COLLATE pg_catalog."default",
    sec_teamnaming character varying(70) COLLATE pg_catalog."default",
    sec_status integer NOT NULL
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_section
    OWNER to postgres;

GRANT ALL ON TABLE public.tbmst_section TO postgres;

//////////////////////

-- Table: public.tbua_useraccess

-- DROP TABLE IF EXISTS public.tbua_useraccess;

CREATE TABLE IF NOT EXISTS public.tbua_useraccess
(
    ua_userid integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 245 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    ua_username character varying(30) COLLATE pg_catalog."default" NOT NULL,
    ua_emplcode integer,
    ua_lastupdate timestamp without time zone,
    ua_lastuser character varying(50) COLLATE pg_catalog."default",
    ua_isactive smallint,
    ua_rolescommon character varying(30) COLLATE pg_catalog."default",
    ua_rolespps character varying(30) COLLATE pg_catalog."default",
    ua_rolesmorpics character varying(30) COLLATE pg_catalog."default",
    ua_2dbarcode character varying(300) COLLATE pg_catalog."default",
    ua_rolesjinsystem character varying(50) COLLATE pg_catalog."default",
    ua_roleshrpa character varying(50) COLLATE pg_catalog."default",
    ua_roleqcdb character varying(50) COLLATE pg_catalog."default",
    ua_rolesasset character varying(50) COLLATE pg_catalog."default",
    ua_rolejinprojects character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT pk_tbua_useraccess_1 PRIMARY KEY (ua_username)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbua_useraccess
    OWNER to postgres;

GRANT ALL ON TABLE public.tbua_useraccess TO postgres;

//////////////////////

-- Table: public.tbua_usermenusetup

-- DROP TABLE IF EXISTS public.tbua_usermenusetup;

CREATE TABLE IF NOT EXISTS public.tbua_usermenusetup
(
    ums_userid integer NOT NULL,
    ums_menuid integer NOT NULL,
    ums_view smallint NOT NULL,
    ums_add smallint NOT NULL,
    ums_edit smallint NOT NULL,
    ums_delete smallint NOT NULL,
    ums_post smallint NOT NULL,
    ums_generate smallint NOT NULL,
    ums_designreport smallint NOT NULL,
    ums_lastuser character varying(30) COLLATE pg_catalog."default",
    ums_lastupdate timestamp without time zone,
    ums_print smallint,
    CONSTRAINT tbua_usermenusetup_pkey PRIMARY KEY (ums_userid, ums_menuid)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbua_usermenusetup
    OWNER to postgres;

GRANT ALL ON TABLE public.tbua_usermenusetup TO postgres;

//////////////////////

jinsystem

-- Table: public.m_equipmentcat

-- DROP TABLE IF EXISTS public.m_equipmentcat;

CREATE TABLE IF NOT EXISTS public.m_equipmentcat
(
    equipmentcat character varying(50) COLLATE pg_catalog."default" NOT NULL,
    ec_status integer DEFAULT 1,
    es_lastuser integer,
    ec_lastupdate timestamp without time zone,
    CONSTRAINT m_equipmentcat_unique UNIQUE (equipmentcat)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.m_equipmentcat
    OWNER to postgres;

GRANT ALL ON TABLE public.m_equipmentcat TO postgres;

//////////////////////

-- Table: public.m_ipaddress

-- DROP TABLE IF EXISTS public.m_ipaddress;

CREATE TABLE IF NOT EXISTS public.m_ipaddress
(
    mip_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    mip_vlanid integer,
    mip_vlanname character varying(20) COLLATE pg_catalog."default",
    mip_ipadd character varying(20) COLLATE pg_catalog."default",
    mip_lastupdate timestamp without time zone,
    mip_lastuser integer,
    mip_status integer,
    CONSTRAINT m_ipaddress_pkey PRIMARY KEY (mip_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.m_ipaddress
    OWNER to postgres;

//////////////////////

-- Table: public.m_itequipment

-- DROP TABLE IF EXISTS public.m_itequipment;

CREATE TABLE IF NOT EXISTS public.m_itequipment
(
    e_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    e_assetno character varying(100) COLLATE pg_catalog."default",
    e_equipmentid integer,
    e_kind character varying(100) COLLATE pg_catalog."default",
    e_brand character varying(50) COLLATE pg_catalog."default",
    e_model character varying(200) COLLATE pg_catalog."default",
    e_serialnumber character varying(100) COLLATE pg_catalog."default",
    e_receivedate date NOT NULL,
    e_status character varying(50) COLLATE pg_catalog."default",
    e_lastupdate timestamp without time zone,
    e_lastuser character varying(50) COLLATE pg_catalog."default",
    e_disposedate date,
    e_equipmentname character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT m_itequipment_pk PRIMARY KEY (e_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.m_itequipment
    OWNER to postgres;

GRANT ALL ON TABLE public.m_itequipment TO postgres;

//////////////////////

-- Table: public.t_dispose

-- DROP TABLE IF EXISTS public.t_dispose;

CREATE TABLE IF NOT EXISTS public.t_dispose
(
    td_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    td_assetno integer,
    td_category character varying(100) COLLATE pg_catalog."default",
    td_reason character varying(200) COLLATE pg_catalog."default",
    td_decisiondate date,
    td_disposedate date,
    td_lastupdate timestamp without time zone,
    td_lastuser character varying(50) COLLATE pg_catalog."default",
    td_serialnumber character varying(50) COLLATE pg_catalog."default",
    td_fixedasset integer,
    CONSTRAINT t_dispose_pk PRIMARY KEY (td_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_dispose
    OWNER to postgres;

GRANT ALL ON TABLE public.t_dispose TO postgres;

//////////////////////

-- Table: public.t_equipmentmovement

-- DROP TABLE IF EXISTS public.t_equipmentmovement;

CREATE TABLE IF NOT EXISTS public.t_equipmentmovement
(
    tea_assetno integer NOT NULL,
    tea_transactiondate date NOT NULL,
    tea_pcname character varying(50) COLLATE pg_catalog."default",
    tea_ipaddress character varying(50) COLLATE pg_catalog."default",
    tea_fromlocation character varying(50) COLLATE pg_catalog."default",
    tea_tolocation character varying(50) COLLATE pg_catalog."default",
    tea_fromuser character varying(50) COLLATE pg_catalog."default",
    tea_touser character varying(50) COLLATE pg_catalog."default",
    tea_category character varying(50) COLLATE pg_catalog."default",
    tea_purpose character varying(100) COLLATE pg_catalog."default",
    tea_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tea_returnoldequip integer,
    tea_serialnumber character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT t_equipmentmovement_pk PRIMARY KEY (tea_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_equipmentmovement
    OWNER to postgres;

GRANT ALL ON TABLE public.t_equipmentmovement TO postgres;

//////////////////////

-- Table: public.t_handover

-- DROP TABLE IF EXISTS public.t_handover;

CREATE TABLE IF NOT EXISTS public.t_handover
(
    th_recordno integer NOT NULL,
    th_requestdate timestamp without time zone NOT NULL,
    th_empno_rep integer,
    th_empname_rep character varying(255) COLLATE pg_catalog."default",
    th_sectioncode_rep integer,
    th_purpose text COLLATE pg_catalog."default",
    th_reason text COLLATE pg_catalog."default",
    th_status integer,
    th_lastuser integer,
    th_lastupdate timestamp without time zone,
    CONSTRAINT th_handover_pkey PRIMARY KEY (th_recordno)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_handover
    OWNER to postgres;

//////////////////////

-- Table: public.t_handoverdetail

-- DROP TABLE IF EXISTS public.t_handoverdetail;

CREATE TABLE IF NOT EXISTS public.t_handoverdetail
(
    hd_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    hd_recordno integer NOT NULL,
    hd_assetno integer,
    hd_serialnumber character varying(100) COLLATE pg_catalog."default",
    hd_equipmentname character varying(255) COLLATE pg_catalog."default",
    hd_delivereddate timestamp without time zone,
    hd_deliveredempno_rep integer,
    hd_deliveredname_rep character varying(255) COLLATE pg_catalog."default",
    hd_returneddate timestamp without time zone,
    hd_returnedname_rep character varying(255) COLLATE pg_catalog."default",
    hd_returnedempno_rep integer,
    hd_status integer,
    hd_lastuser integer,
    hd_lastupdate timestamp without time zone,
    hd_category character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT hd_handoverdetail_pkey PRIMARY KEY (hd_id),
    CONSTRAINT fk_hd_recordno FOREIGN KEY (hd_recordno)
        REFERENCES public.t_handover (th_recordno) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_handoverdetail
    OWNER to postgres;

//////////////////////

-- Table: public.t_license

-- DROP TABLE IF EXISTS public.t_license;

CREATE TABLE IF NOT EXISTS public.t_license
(
    tl_id integer NOT NULL DEFAULT nextval('t_license_tl_id_seq'::regclass),
    tl_type character varying(50) COLLATE pg_catalog."default",
    tl_refnumber character varying(100) COLLATE pg_catalog."default",
    tl_licensepartner character varying(50) COLLATE pg_catalog."default",
    tl_orderdate timestamp without time zone,
    tl_startdate timestamp without time zone,
    tl_enddate timestamp without time zone,
    tl_productname character varying(350) COLLATE pg_catalog."default",
    tl_productqty numeric(18,2),
    tl_productdesc character varying(150) COLLATE pg_catalog."default",
    tl_productkey character varying(100) COLLATE pg_catalog."default",
    tl_organization character varying(100) COLLATE pg_catalog."default",
    tl_last_update timestamp without time zone DEFAULT now(),
    tl_last_user integer NOT NULL DEFAULT 1,
    tl_po_number integer NOT NULL DEFAULT nextval('t_license_tl_po_number_seq'::regclass),
    tl_license_type_category character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT t_license_pkey PRIMARY KEY (tl_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_license
    OWNER to postgres;

//////////////////////

-- Table: public.t_licensedetail

-- DROP TABLE IF EXISTS public.t_licensedetail;

CREATE TABLE IF NOT EXISTS public.t_licensedetail
(
    ld_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tl_id integer NOT NULL,
    ld_pcnama character varying(255) COLLATE pg_catalog."default",
    ld_assetno character varying(100) COLLATE pg_catalog."default",
    ld_pc_id integer,
    ld_po_number integer,
    ld_status integer,
    ld_lastuser integer,
    ld_lastupdate timestamp without time zone,
    ld_serialnumber character varying(100) COLLATE pg_catalog."default",
    ld_employee_code integer,
    ld_position_code smallint,
    CONSTRAINT t_licensedetail_pkey PRIMARY KEY (ld_id),
    CONSTRAINT fk_tl_id FOREIGN KEY (tl_id)
        REFERENCES public.t_license (tl_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_licensedetail
    OWNER to postgres;

//////////////////////

-- Table: public.t_pcclient

-- DROP TABLE IF EXISTS public.t_pcclient;

CREATE TABLE IF NOT EXISTS public.t_pcclient
(
    tpc_id integer NOT NULL DEFAULT nextval('t_pcclient_tpc_id_seq'::regclass),
    tpc_name character varying(100) COLLATE pg_catalog."default",
    tpc_assetno character varying(50) COLLATE pg_catalog."default",
    tpc_monitorassetno character varying(50) COLLATE pg_catalog."default",
    tpc_ipbefore character varying(15) COLLATE pg_catalog."default",
    tpc_ipafter character varying(15) COLLATE pg_catalog."default",
    tpc_itequipment text COLLATE pg_catalog."default",
    tpc_user character varying(255) COLLATE pg_catalog."default",
    tpc_area character varying(255) COLLATE pg_catalog."default",
    tpc_status integer NOT NULL,
    tpc_lastuser integer,
    tpc_lastupdate timestamp without time zone,
    CONSTRAINT t_pcclient_pkey PRIMARY KEY (tpc_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_pcclient
    OWNER to postgres;

//////////////////////

-- Table: public.t_pcserver

-- DROP TABLE IF EXISTS public.t_pcserver;

CREATE TABLE IF NOT EXISTS public.t_pcserver
(
    srv_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    srv_asset_no character varying(100) COLLATE pg_catalog."default",
    srv_asset_name character varying(200) COLLATE pg_catalog."default",
    srv_location character varying(100) COLLATE pg_catalog."default",
    srv_receive_date date,
    srv_age integer,
    srv_hdd character varying(100) COLLATE pg_catalog."default",
    srv_ram character varying(100) COLLATE pg_catalog."default",
    srv_vga character varying(100) COLLATE pg_catalog."default",
    srv_ethernet character varying(100) COLLATE pg_catalog."default",
    srv_remark text COLLATE pg_catalog."default",
    srv_status smallint NOT NULL DEFAULT 0,
    srv_lastupdate timestamp without time zone,
    srv_lastuser character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT t_pcserver_pk PRIMARY KEY (srv_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_pcserver
    OWNER to postgres;

GRANT ALL ON TABLE public.t_pcserver TO postgres;

//////////////////////

-- Table: public.t_ticketing

-- DROP TABLE IF EXISTS public.t_ticketing;

CREATE TABLE IF NOT EXISTS public.t_ticketing
(
    tt_id integer NOT NULL DEFAULT nextval('t_ticketing_tt_id_seq'::regclass),
    tt_empno_rep integer,
    tt_empname_rep character varying(255) COLLATE pg_catalog."default",
    tt_sectioncode_rep integer,
    tt_category integer,
    tt_case text COLLATE pg_catalog."default",
    tt_pic_system integer,
    tt_check_date timestamp without time zone,
    tt_finish_date timestamp without time zone,
    tt_lastuser integer,
    tt_lastupdate timestamp without time zone,
    tt_status integer,
    tt_action text COLLATE pg_catalog."default",
    tt_assetno integer,
    tt_categoryequip character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT t_ticketing_pkey PRIMARY KEY (tt_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.t_ticketing
    OWNER to postgres;

//////////////////////

-- Table: public.tb_mrp_potosup

-- DROP TABLE IF EXISTS public.tb_mrp_potosup;

CREATE TABLE IF NOT EXISTS public.tb_mrp_potosup
(
    pos_potosupplierno integer NOT NULL DEFAULT nextval('tb_mrp_potosup_pos_potosupplierno_seq'::regclass),
    pos_revision integer,
    pos_deliveryto character varying(1) COLLATE pg_catalog."default",
    pos_deliverytoname character varying(50) COLLATE pg_catalog."default",
    pos_deliverytoaddress character varying(60) COLLATE pg_catalog."default",
    pos_billto character varying(1) COLLATE pg_catalog."default",
    pos_billtoname character varying(30) COLLATE pg_catalog."default",
    pos_billtoaddress character varying(60) COLLATE pg_catalog."default",
    pos_shipto character varying(1) COLLATE pg_catalog."default",
    pos_shiptoname character varying(30) COLLATE pg_catalog."default",
    pos_shiptoaddress character varying(60) COLLATE pg_catalog."default",
    pos_suppliercode integer,
    pos_suppliername character varying(50) COLLATE pg_catalog."default",
    pos_supplieraddress character varying(90) COLLATE pg_catalog."default",
    pos_suplieratt character varying(100) COLLATE pg_catalog."default",
    pos_supliercc character varying(100) COLLATE pg_catalog."default",
    pos_suplierreff character varying(100) COLLATE pg_catalog."default",
    pos_plskey integer,
    pos_custno character varying(10) COLLATE pg_catalog."default",
    pos_custname character varying(25) COLLATE pg_catalog."default",
    pos_remark character varying(100) COLLATE pg_catalog."default",
    pos_podate timestamp without time zone,
    pos_termofpayment character varying(150) COLLATE pg_catalog."default",
    pos_shipby character varying(12) COLLATE pg_catalog."default",
    pos_fob character varying(10) COLLATE pg_catalog."default",
    pos_freightterm character varying(50) COLLATE pg_catalog."default",
    pos_confirmphone character varying(25) COLLATE pg_catalog."default",
    pos_totalamountfnc numeric,
    pos_totalamountsrc numeric,
    pos_status character varying(10) COLLATE pg_catalog."default",
    pos_reffno character varying(50) COLLATE pg_catalog."default",
    pos_reffdate timestamp without time zone,
    pos_offer character varying(100) COLLATE pg_catalog."default",
    pos_yourname character varying(100) COLLATE pg_catalog."default",
    pos_description character varying(100) COLLATE pg_catalog."default",
    pos_taxremark character varying(100) COLLATE pg_catalog."default",
    pos_currencycode character varying(5) COLLATE pg_catalog."default",
    pos_currencyrate numeric,
    pos_vat numeric(5,2),
    pos_unpostedby character varying(12) COLLATE pg_catalog."default",
    pos_cc character varying(50) COLLATE pg_catalog."default",
    pos_place character varying(50) COLLATE pg_catalog."default",
    pos_quote1 character varying(50) COLLATE pg_catalog."default",
    pos_quote2 character varying(50) COLLATE pg_catalog."default",
    pos_quote3 character varying(50) COLLATE pg_catalog."default",
    pos_quote4 character varying(50) COLLATE pg_catalog."default",
    pos_quote5 character varying(50) COLLATE pg_catalog."default",
    pos_flag smallint,
    pos_locked smallint,
    pos_potype smallint,
    pos_arrivaltype character varying(7) COLLATE pg_catalog."default",
    pos_discount smallint,
    pos_discountamount numeric(18,2),
    pos_discountpercentage numeric(18,2),
    pos_ppn smallint,
    pos_emplcoderequestor character varying(10) COLLATE pg_catalog."default",
    pos_emplcodepurchasing character varying(10) COLLATE pg_catalog."default",
    pos_reason character varying(100) COLLATE pg_catalog."default",
    pos_jjflag smallint,
    pos_msds smallint,
    pos_purchremark character varying(150) COLLATE pg_catalog."default",
    pos_peorderno character varying(50) COLLATE pg_catalog."default",
    pos_releasedate timestamp without time zone,
    pos_confirmdate timestamp without time zone,
    pos_printdate timestamp without time zone,
    pos_printby integer,
    pos_releasedby integer,
    pos_confirmby integer,
    pos_cancelby integer,
    pos_dateconfirm timestamp without time zone,
    pos_subcont smallint NOT NULL,
    pos_reqsection integer,
    pos_reqsectionname character varying(50) COLLATE pg_catalog."default",
    pos_username1 character varying(50) COLLATE pg_catalog."default",
    pos_username character varying(50) COLLATE pg_catalog."default",
    pos_lastupdate timestamp without time zone,
    pos_suppcccode integer,
    pos_installment boolean,
    pos_rfqstatus smallint,
    pos_ringishono character varying(50) COLLATE pg_catalog."default",
    pos_replypo boolean,
    pos_bcflag smallint,
    pos_ocno integer,
    pos_bctype integer,
    CONSTRAINT tb_mrp_potosup_pkey PRIMARY KEY (pos_potosupplierno)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tb_mrp_potosup
    OWNER to postgres;

//////////////////////

-- Table: public.tb_mrp_potosupdet

-- DROP TABLE IF EXISTS public.tb_mrp_potosupdet;

CREATE TABLE IF NOT EXISTS public.tb_mrp_potosupdet
(
    posd_potosupplierno integer,
    posd_podetailno integer NOT NULL DEFAULT nextval('tb_mrp_potosupdet_posd_podetailno_seq'::regclass),
    posd_mrppurchaseno integer,
    posd_partcategory smallint,
    posd_partcode character varying(10) COLLATE pg_catalog."default",
    posd_partname character varying(350) COLLATE pg_catalog."default",
    posd_japanname character varying(10) COLLATE pg_catalog."default",
    posd_description character varying(40) COLLATE pg_catalog."default",
    posd_requireddate timestamp without time zone,
    posd_suppliernotice timestamp without time zone,
    posd_confirmdate timestamp without time zone,
    posd_arrivaldate timestamp without time zone,
    posd_quantity numeric(18,2),
    posd_unitprice numeric(21,9),
    posd_digitprice integer,
    posd_digitqty integer,
    posd_currencycode character varying(7) COLLATE pg_catalog."default",
    posd_currencyrate numeric(18,5),
    posd_totalpricefnc numeric(18,5),
    posd_totalpricesrc numeric(18,5),
    posd_extention numeric(12,5),
    posd_texmark character varying(40) COLLATE pg_catalog."default",
    posd_orgprice numeric(18,2),
    posd_jjprice numeric(18,2),
    posd_shipby character varying(12) COLLATE pg_catalog."default",
    posd_unitofmeasure character varying(10) COLLATE pg_catalog."default",
    posd_uomsource character varying(15) COLLATE pg_catalog."default",
    posd_sourceqty numeric(18,3),
    posd_convertionval numeric(18,4) NOT NULL,
    posd_pricetype character varying(3) COLLATE pg_catalog."default",
    posd_type character varying(3) COLLATE pg_catalog."default",
    posd_receiptplandate timestamp without time zone,
    posd_cancelstatus character varying(10) COLLATE pg_catalog."default",
    posd_posequence smallint NOT NULL,
    posd_posplit smallint NOT NULL,
    posd_subpostatus smallint NOT NULL,
    posd_etaport timestamp without time zone,
    posd_splitdate timestamp without time zone,
    posd_username character varying(50) COLLATE pg_catalog."default",
    posd_lastupdate timestamp without time zone,
    posd_materialdescription character varying(150) COLLATE pg_catalog."default",
    posd_hscode character varying(50) COLLATE pg_catalog."default",
    posd_partnamedesc character varying(200) COLLATE pg_catalog."default",
    CONSTRAINT tb_mrp_potosupdet_pkey PRIMARY KEY (posd_podetailno),
    CONSTRAINT fk_potosupdethd FOREIGN KEY (posd_potosupplierno)
        REFERENCES public.tb_mrp_potosup (pos_potosupplierno) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tb_mrp_potosupdet
    OWNER to postgres;

//////////////////////

-- Table: public.tbmst_disposereason

-- DROP TABLE IF EXISTS public.tbmst_disposereason;

CREATE TABLE IF NOT EXISTS public.tbmst_disposereason
(
    td_id integer NOT NULL DEFAULT nextval('tbmst_disposereason_td_id_seq'::regclass),
    td_reason character varying(250) COLLATE pg_catalog."default",
    td_status integer,
    td_lastuser integer,
    td_lastupdate timestamp without time zone,
    CONSTRAINT tbmst_disposereason_pkey PRIMARY KEY (td_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_disposereason
    OWNER to postgres;

GRANT ALL ON TABLE public.tbmst_disposereason TO postgres;

//////////////////////

-- Table: public.tbmst_switch_managed

-- DROP TABLE IF EXISTS public.tbmst_switch_managed;

CREATE TABLE IF NOT EXISTS public.tbmst_switch_managed
(
    sm_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    sm_id_switch integer,
    sm_asset_no character varying(100) COLLATE pg_catalog."default",
    sm_asset_name character varying(100) COLLATE pg_catalog."default",
    sm_received_date date,
    sm_age numeric(5,1),
    sm_ip character varying(50) COLLATE pg_catalog."default",
    sm_location character varying(100) COLLATE pg_catalog."default",
    sm_lastuser character varying(50) COLLATE pg_catalog."default",
    sm_lastupdate timestamp without time zone,
    CONSTRAINT tbmst_switch_managed_pkey PRIMARY KEY (sm_id),
    CONSTRAINT tbmst_switch_managed_sm_asset_no_key UNIQUE (sm_asset_no)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_switch_managed
    OWNER to postgres;

//////////////////////

-- Table: public.tbmst_switch_managed_detail

-- DROP TABLE IF EXISTS public.tbmst_switch_managed_detail;

CREATE TABLE IF NOT EXISTS public.tbmst_switch_managed_detail
(
    smd_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    smd_header_id_switch integer NOT NULL,
    smd_port integer,
    smd_type character varying(20) COLLATE pg_catalog."default",
    smd_vlan_id integer,
    smd_vlan_name character varying(250) COLLATE pg_catalog."default",
    smd_status smallint NOT NULL DEFAULT 1,
    smd_lastupdate timestamp without time zone,
    smd_lastuser integer,
    CONSTRAINT tbmst_switch_managed_detail_pkey PRIMARY KEY (smd_id),
    CONSTRAINT fk_smd_header_id_to_sm_id FOREIGN KEY (smd_header_id_switch)
        REFERENCES public.tbmst_switch_managed (sm_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_vlan_id FOREIGN KEY (smd_vlan_id)
        REFERENCES public.tbmst_vlan (tv_id_vlan) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_switch_managed_detail
    OWNER to postgres;

//////////////////////

-- Table: public.tbmst_vlan

-- DROP TABLE IF EXISTS public.tbmst_vlan;

CREATE TABLE IF NOT EXISTS public.tbmst_vlan
(
    tv_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tv_id_vlan integer,
    tv_name character varying(250) COLLATE pg_catalog."default",
    tv_lastuser integer,
    tv_lastupdate timestamp without time zone,
    CONSTRAINT tbmst_vlan_pkey PRIMARY KEY (tv_id),
    CONSTRAINT tbmst_vlan_tv_id_vlan_key UNIQUE (tv_id_vlan)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbmst_vlan
    OWNER to postgres;

//////////////////////

-- Table: public.tbtfa_equipmentacceptance

-- DROP TABLE IF EXISTS public.tbtfa_equipmentacceptance;

CREATE TABLE IF NOT EXISTS public.tbtfa_equipmentacceptance
(
    ea_assetnumber integer,
    ea_amendstatus smallint,
    ea_section smallint,
    ea_productseries character varying(20) COLLATE pg_catalog."default",
    ea_class character varying(5) COLLATE pg_catalog."default",
    ea_assettype smallint,
    ea_model character varying(255) COLLATE pg_catalog."default",
    ea_mfgno character varying(80) COLLATE pg_catalog."default",
    ea_vendortype smallint,
    ea_otherremark character varying(255) COLLATE pg_catalog."default",
    ea_invoiceno character varying(55) COLLATE pg_catalog."default",
    ea_amount numeric(18,2),
    ea_currency character varying(15) COLLATE pg_catalog."default",
    ea_installation smallint,
    ea_contractno character varying(255) COLLATE pg_catalog."default",
    ea_datereceived timestamp without time zone,
    ea_remark character varying(255) COLLATE pg_catalog."default",
    ea_machineno character varying(255) COLLATE pg_catalog."default",
    ea_place smallint,
    ea_placeoutside smallint,
    ea_createdate timestamp without time zone,
    ea_flag smallint,
    ea_sectioncode integer,
    ea_bcflag smallint,
    ea_bcno character varying(10) COLLATE pg_catalog."default",
    ea_bcdate timestamp without time zone,
    ea_labelstatus smallint NOT NULL,
    ea_itclass smallint,
    ea_userentry character varying(50) COLLATE pg_catalog."default",
    ea_userentrydate timestamp without time zone,
    ea_purchentry character varying(15) COLLATE pg_catalog."default",
    ea_purchentrydate timestamp without time zone,
    ea_accentry character varying(15) COLLATE pg_catalog."default",
    ea_accentrydate timestamp without time zone,
    ea_gmentry character varying(15) COLLATE pg_catalog."default",
    ea_gmentrydate timestamp without time zone,
    ea_deprecperiod timestamp without time zone,
    ea_deprecbookvalue numeric(18,0),
    ea_username character varying(50) COLLATE pg_catalog."default",
    ea_lastupdate timestamp without time zone,
    ea_pono integer,
    ea_subassettype integer,
    ea_pequotation character varying(50) COLLATE pg_catalog."default",
    ea_productdescription character varying(150) COLLATE pg_catalog."default",
    ea_acquisitiondate timestamp without time zone,
    ea_productseriesold character varying(20) COLLATE pg_catalog."default",
    ea_seriestype character varying(20) COLLATE pg_catalog."default",
    ea_printdate timestamp without time zone,
    ea_userprint integer,
    ea_usersubmit integer,
    ea_usersubmitdate timestamp without time zone,
    ea_secname character varying(40) COLLATE pg_catalog."default",
    ea_id integer NOT NULL DEFAULT nextval('tbtfa_equipmentacceptance_ea_id_seq1'::regclass),
    ea_sectionraa integer,
    CONSTRAINT tbtfa_equipmentacceptance_pkey PRIMARY KEY (ea_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tbtfa_equipmentacceptance
    OWNER to postgres;

GRANT ALL ON TABLE public.tbtfa_equipmentacceptance TO postgres;

//////////////////////
